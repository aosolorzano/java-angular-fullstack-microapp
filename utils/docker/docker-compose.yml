version: '3.9'

services:
  postgres:
    image: postgres:13.6
    container_name: postgres
    environment:
      - POSTGRES_DB=TimerServiceDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    ports:
      - "5432:5432"
    networks:
      - tasks-network

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    working_dir: "/home/dynamodblocal"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    ports:
      - "8000:8000"
    volumes:
      - ../dynamodb:/home/dynamodblocal/data
    networks:
      - tasks-network

  aws-cli:
    image: amazon/aws-cli
    container_name: aws-cli
    environment:
      AWS_ACCESS_KEY_ID: "DUMMY"
      AWS_SECRET_ACCESS_KEY: "DUMMY"
    command: "dynamodb create-table --table-name Tasks --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://dynamodb-local:8000 --region us-west-2"
    depends_on:
      - dynamodb-local
    networks:
      - tasks-network

  tasks-backend:
    image: aosolorzano/java-timer-service-quarkus:1.2.0-arm64
    container_name: timer-service-backend
    build:
      context: ../../backend/java-timer-service-quarkus
      dockerfile: Dockerfile.multistage-arm64
    env_file:
      - dev.env
    depends_on:
      - dynamodb-local
      - postgres
    ports:
      - "8080:8080"
    networks:
      - tasks-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - tasks-backend
    ports:
      - "80:80"
    networks:
      - tasks-network

networks:
  tasks-network:
    driver: bridge
